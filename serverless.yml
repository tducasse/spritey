service: spritey

plugins:
  - serverless-esbuild
  - serverless-offline

frameworkVersion: '2'

provider:
  region: us-east-1
  apiGateway:
    shouldStartNameWithService: true
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  iamRoleStatements:
    - Effect: "Allow"
      Action: 
        - "s3:*"
      Resource: "arn:aws:s3:::spritey-upload/*"
    - Effect: "Allow"
      Action:
        - "dynamodb:*"
      Resource: "arn:aws:dynamodb:*:*:table/sprites"
    - Effect: "Allow"
      Action:
        - "dynamodb:*"
      Resource: "arn:aws:dynamodb:*:*:table/tags"
    - Effect: "Allow"
      Action:
        - "dynamodb:*"
      Resource: "arn:aws:dynamodb:*:*:table/challenges"

functions:
  requestUploadURL:
    handler: handler.requestUploadURL
    events:
      - http:
          path: requestUploadURL
          method: post
          cors: true
          authorizer: aws_iam
  getTags:
    handler: handler.getTags
    events:
      - http:
          path: getTags
          method: get
          cors: true
          authorizer: aws_iam
  getSprites:
    handler: handler.getSprites
    events:
      - http:
          path: getSprites/{tag}
          method: get
          cors: true
          authorizer: aws_iam
  getChallenges:
    handler: handler.getChallenges
    events:
      - http:
          path: getChallenges
          method: get
          cors: true
          authorizer: aws_iam
  updateChallenge:
    handler: handler.updateChallenge
    events:
      - http:
          path: updateChallenge
          method: post
          cors: true
          authorizer: aws_iam
  updateSettings:
    handler: handler.updateSettings
    events:
      - http:
          path: updateSettings
          method: patch
          cors: true
          authorizer: aws_iam

resources:
  Resources:
    sprites:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: sprites
        AttributeDefinitions:
          - AttributeName: tag
            AttributeType: S
          - AttributeName: s3_path
            AttributeType: S
        KeySchema:
          - AttributeName: tag
            KeyType: HASH 
          - AttributeName: s3_path
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    tags:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: tags
        AttributeDefinitions:
          - AttributeName: tag
            AttributeType: S
        KeySchema:
          - AttributeName: tag
            KeyType: HASH 
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    challenges:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: challenges
        AttributeDefinitions:
          - AttributeName: name
            AttributeType: S
          - AttributeName: end_date
            AttributeType: S 
        KeySchema:
          - AttributeName: name
            KeyType: HASH
          - AttributeName: end_date
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    UploadBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: spritey-upload
        AccessControl: PublicRead
        CorsConfiguration:
          CorsRules:
          - AllowedMethods:
            - GET
            - PUT
            - POST
            - HEAD
            AllowedOrigins:
            - "*"
            AllowedHeaders:
            - "*"
    GatewayResponseDefault4XX:
        Type: 'AWS::ApiGateway::GatewayResponse'
        Properties:
          ResponseParameters:
            gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
            gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
          ResponseType: DEFAULT_4XX
          RestApiId:
            Ref: 'ApiGatewayRestApi'
    GatewayResponseDefault5XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_5XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'